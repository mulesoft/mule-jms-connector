<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns:mule="http://www.mulesoft.org/schema/mule/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
                          http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
                          http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
                          http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd">

    <munit:config name="queue-publish-consume"/>

    <munit:after-test name="afterTest-queue-publish-consume-test-case" description="after test">
        <set-variable variableName="brokerName" value="localhost"/>
        <set-variable variableName="destinationName" value="DEV.QUEUE.1"/>
        <flow-ref name="purgeQueue"/>
    </munit:after-test>

    <munit:test name="publishAndConsumeOnce">
        <munit:execution>
            <set-variable value="IBM MQ Message" variableName="message"/>
            <jms:publish config-ref="config-no-caching" destination="DEV.QUEUE.1">
                <jms:message>
                    <jms:body>#[vars.message]</jms:body>
                </jms:message>
            </jms:publish>
        </munit:execution>
        <munit:validation>
            <jms:consume config-ref="config-no-caching" destination="DEV.QUEUE.1" maximumWait="30000"/>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(vars.message)]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="expectedHeadersOnlyDefaultParameters">
        <munit:behavior>
            <set-variable variableName="correlationId" value="#[correlationId]"/>
            <async>
                <jms:publish config-ref="config-no-caching" destination="DEV.QUEUE.1"/>
            </async>
            <async>
                <jms:consume config-ref="config-no-caching" destination="DEV.QUEUE.1"/>
                <munit-tools:queue>
                    <munit-tools:value>#[attributes]</munit-tools:value>
                </munit-tools:queue>
            </async>
        </munit:behavior>
        <munit:execution>
            <munit-tools:dequeue/>
            <logger level="DEBUG" message="#[output application/json --- payload]"/>
            <munit-tools:assert-that expression="#[payload.headers.JMSMessageID]" is="#[MunitTools::notNullValue()]"/>
            <munit-tools:assert-that expression="#[payload.headers.JMSTimestamp]" is="#[MunitTools::notNullValue()]"/>
            <munit-tools:assert-that expression="#[payload.headers.JMSCorrelationID]"
                                     is="#[MunitTools::equalTo(vars.correlationId)]"/>
            <munit-tools:assert-that expression="#[payload.headers.JMSDeliveryMode]" is="#[MunitTools::equalTo(1)]"/>
            <munit-tools:assert-that expression="#[payload.headers.JMSPriority]" is="#[MunitTools::equalTo(4)]"/>
            <munit-tools:assert-that expression="#[payload.headers.JMSRedelivered]" is="#[MunitTools::equalTo(false)]"/>
            <munit-tools:assert-that expression="#[payload.headers.JMSType]" is="#[MunitTools::nullValue()]"/>
            <munit-tools:assert-that expression="#[payload.headers.JMSReplyTo]" is="#[MunitTools::nullValue()]"/>

            <munit-tools:assert-that expression="#[payload.ackId]" is="#[MunitTools::nullValue()]"/>
        </munit:execution>
    </munit:test>
    <!-- TODO : All these tests below should be refactored once MUnit fixes the issue with non-blocking operations-->

    <munit:test name="publishAndConsumeManyInOrder">
        <munit:execution>
            <set-variable value="#[['first', 'second', 'third']]" variableName="messages"/>
            <foreach collection="#[vars.messages ]">
                <jms:publish config-ref="config-no-caching" destination="DEV.QUEUE.1">
                    <jms:message>
                        <jms:body>#[payload]</jms:body>
                    </jms:message>
                </jms:publish>
                <logger message="Published #[payload]" level="DEBUG"/>
            </foreach>
        </munit:execution>
        <munit:validation>
            <flow-ref name="validateMessages"/>
        </munit:validation>
    </munit:test>

    <munit:test name="publishConsumeInOrderTillNoMoreAndContinueInOrder">
        <munit:validation>
            <set-variable value="#[['first', 'second']]" variableName="messages"/>
            <foreach collection="#[vars.messages ]">
                <logger message="About to publish #[import * from dw::Runtime --- payload wait 200]" level="DEBUG"/>
                <jms:publish config-ref="config-no-caching" destination="DEV.QUEUE.1">
                    <jms:message>
                        <jms:body>#[payload]</jms:body>
                    </jms:message>
                </jms:publish>
                <logger message="Published #[payload]" level="DEBUG"/>
            </foreach>
            <flow-ref name="validateMessages"/>
            <jms:consume config-ref="config-no-caching" destination="DEV.QUEUE.1" maximumWait="0"/>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(null)]"/>
            <set-variable value="#[['third', 'fourth']]" variableName="messages"/>
            <foreach collection="#[vars.messages ]">
                <logger message="About to publish #[import * from dw::Runtime --- payload wait 200]" level="DEBUG"/>
                <jms:publish config-ref="config-no-caching" destination="DEV.QUEUE.1">
                    <jms:message>
                        <jms:body>#[payload]</jms:body>
                    </jms:message>
                </jms:publish>
                <logger message="Published #[payload]" level="DEBUG"/>
            </foreach>
            <flow-ref name="validateMessages"/>
        </munit:validation>
    </munit:test>

    <flow name="validateMessages">
        <foreach collection="#[vars.messages]">
            <logger message="Should consume #[import * from dw::Runtime --- payload wait 200]" level="DEBUG"/>
                <jms:consume config-ref="config-no-caching" destination="DEV.QUEUE.1" target="consumedMessage"/>
                <logger message="Consumed #[payload]" level="DEBUG"/>
                <munit-tools:queue/>
        </foreach>
        <foreach collection="#[vars.messages]">
            <logger message="#[import * from dw::Runtime --- payload wait 200]"/>
            <munit-tools:dequeue target="dequeued"/>
            <munit-tools:assert-that expression="#[vars.dequeued]" is="#[MunitTools::equalTo(payload)]"/>
        </foreach>
    </flow>

</mule>
