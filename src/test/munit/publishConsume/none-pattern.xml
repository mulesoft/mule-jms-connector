<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
      http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
      http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd">

    <munit:config name="none-pattern.xml">
        <munit:parameterizations>
            <munit:parameterization name="default">
                <munit:parameters>
                    <munit:parameter propertyName="config" value="config"/>
                    <munit:parameter propertyName="max.redelivery" value="100"/>
                </munit:parameters>
            </munit:parameterization>
            <munit:parameterization name="no-caching">
                <munit:parameters>
                    <munit:parameter propertyName="config" value="config-no-caching"/>
                    <munit:parameter propertyName="max.redelivery" value="100"/>
                </munit:parameters>
            </munit:parameterization>
        </munit:parameterizations>
    </munit:config>

    <munit:after-test name="afterTest-none-pattern" description="after test">
        <set-variable variableName="brokerName" value="localhost"/>
        <set-variable variableName="destinationName" value="someDest"/>
        <flow-ref name="purgeQueue"/>
        <set-variable variableName="destinationName" value="reply-queue"/>
        <flow-ref name="purgeQueue"/>
        <set-variable variableName="destinationName" value="reply-queue-1"/>
        <flow-ref name="purgeQueue"/>
    </munit:after-test>

    <munit:test name="none-pattern-temp-queue">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="pc-on-new-message"/>
        </munit:enable-flow-sources>
        <munit:execution>
            <set-variable variableName="messages" value="#[Utils::createMessages(1000, () -> { message: 'ping ', correlationId : uuid()})]"/>
            <foreach collection="#[vars.messages]">
                <jms:publish-consume config-ref="${config}" destination="someDest" requestReplyPattern="NONE">
                    <jms:message>
                        <jms:body>#[payload]</jms:body>
                    </jms:message>
                </jms:publish-consume>
                <munit-tools:queue/>
            </foreach>
        </munit:execution>
        <munit:validation>
            <foreach collection="#[vars.messages]">
                <munit-tools:dequeue target="dequeued"/>
                <munit-tools:assert-that expression="#[vars.dequeued.message]" is="#[MunitTools::equalTo('ping pong')]"/>
                <munit-tools:assert-that expression="#[vars.dequeued.correlationId]" is="#[MunitTools::equalTo(payload.correlationId)]"/>
            </foreach>
        </munit:validation>
    </munit:test>

    <munit:test name="none-pattern-fixed-queue">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="pc-on-new-message"/>
        </munit:enable-flow-sources>
        <munit:execution>
            <set-variable variableName="messages" value="#[Utils::createMessages(1000, () -> { message: 'ping ', correlationId : uuid()})]"/>
            <foreach collection="#[vars.messages]">
                <logger message="About to publish #[payload]" level="DEBUG"/>
                <jms:publish-consume config-ref="${config}" destination="someDest" requestReplyPattern="NONE">
                    <jms:message>
                        <jms:body>#[payload]</jms:body>
                        <jms:reply-to destination="reply-queue"/>
                    </jms:message>
                </jms:publish-consume>
                <logger message="Queuing #[payload]" level="DEBUG"/>

                <munit-tools:queue/>
            </foreach>
        </munit:execution>
        <munit:validation>
            <foreach collection="#[vars.messages]">
                <munit-tools:dequeue target="dequeued"/>
                <logger message="Message #[payload]" level="DEBUG"/>
                <logger message="Dequeued #[vars.dequeued]" level="DEBUG"/>
                <munit-tools:assert-that expression="#[vars.dequeued.message]" is="#[MunitTools::equalTo('ping pong')]"/>
                <munit-tools:assert-that expression="#[vars.dequeued.correlationId]" is="#[MunitTools::equalTo(payload.correlationId)]"/>
            </foreach>
        </munit:validation>
    </munit:test>

    <munit:test name="none-pattern-fixed-queue-pre-loaded">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="pc-on-new-message"/>
        </munit:enable-flow-sources>
        <munit:execution>
            <!-- Pre load messages to Reply queue to show that the None pattern will takes this values -->
            <foreach collection="#[Utils::createMessages(1, 'invalid')]">
                <set-variable variableName="uuid" value="#[uuid()]"/>
                <jms:publish destination="reply-queue-1" config-ref="${config}" >
                    <jms:message correlationId="#[vars.uuid]">
                        <jms:body>#[{
                            message : payload,
                            correlationId : vars.uuid
                            }]
                        </jms:body>
                        <jms:reply-to destination="reply-queue-1"/>
                    </jms:message>
                </jms:publish>
            </foreach>

            <set-variable variableName="uuid" value="#[uuid()]"/>

            <jms:publish-consume config-ref="${config}" destination="someDest" requestReplyPattern="NONE">
                <jms:message correlationId="#[vars.uuid]">
                    <jms:body>#[{ message : 'ping ', correlationId : vars.uuid }]</jms:body>
                    <jms:reply-to destination="reply-queue-1"/>
                </jms:message>
            </jms:publish-consume>

            <logger level="DEBUG" message="Queing: #[payload]"/>
            <munit-tools:queue/>
            <jms:consume destination="reply-queue-1" config-ref="${config}"/>
            <munit-tools:queue/>
        </munit:execution>
        <munit:validation>
            <munit-tools:dequeue target="dequeued"/>
            <logger level="DEBUG" message="#[vars.dequeued]"/>
            <munit-tools:assert-that expression="#[vars.dequeued.message]" is="#[MunitTools::equalTo('invalid')]"/>
            <munit-tools:assert-that expression="#[vars.dequeued.correlationId]" is="#[MunitTools::not(MunitTools::equalTo(vars.uuid))]"/>
            <munit-tools:dequeue target="dequeued"/>
            <logger level="DEBUG" message="#[vars.dequeued]"/>
            <munit-tools:assert-that expression="#[vars.dequeued.message]" is="#[MunitTools::equalTo('ping pong')]"/>
            <munit-tools:assert-that expression="#[vars.dequeued.correlationId]" is="#[MunitTools::equalTo(vars.uuid)]"/>
        </munit:validation>
    </munit:test>

</mule>
