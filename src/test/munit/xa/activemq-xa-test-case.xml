<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:mtf="http://www.mulesoft.org/schema/mule/mtf"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
      http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
      http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
      http://www.mulesoft.org/schema/mule/mtf http://www.mulesoft.org/schema/mule/mtf/current/mule-mtf.xsd">

    <!--  Is required a 4.1.5 min mule version to prevent a bug on the lazy init on Bitronix -->
    <munit:config name="xa-test-cases.xml" minMuleVersion="4.1.5"/>

    <munit:test name="consume-xa-message">
        <munit:execution>
            <set-variable variableName="destination" value="#['dest1']"/>
            <set-variable variableName="message" value="#[randomInt(1000000) as String]"/>
            <flow-ref name="publishMessage"/>
            <try transactionalAction="ALWAYS_BEGIN" transactionType="XA">
                <jms:consume config-ref="JMS_Config_XA" destination="#[vars.destination]"/>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(vars.message)]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="publish-xa-message">
        <munit:execution>
            <set-variable variableName="destination" value="#[randomInt(1000000) as String]"/>
            <set-variable variableName="message" value="#[randomInt(1000000) as String]"/>
            <try transactionalAction="ALWAYS_BEGIN" transactionType="XA">
                <jms:publish config-ref="JMS_Config_XA" destination="#[vars.destination]">
                    <jms:message>
                        <jms:body>#[vars.message]</jms:body>
                    </jms:message>
                </jms:publish>
            </try>
            <jms:consume destination="#[vars.destination]"/>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(vars.message)]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="consume-xa-message-and-rollback">
        <munit:execution>
            <set-variable variableName="destination" value="#['dest1']"/>
            <set-variable variableName="txAction" value="ROLLBACK"/>
            <set-variable variableName="message" value="#[randomInt(1000000) as String]"/>
            <flow-ref name="publishMessage"/>
            <try>
                <try transactionalAction="ALWAYS_BEGIN" transactionType="XA">
                    <jms:consume config-ref="JMS_Config_XA" destination="#[vars.destination]"/>
                    <raise-error type="MULE:ANY" description="TX"/>
                </try>
                <error-handler>
                    <on-error-continue type="ANY">
                        <set-variable variableName="firstMessage" value="#[payload]"/>
                        <jms:consume config-ref="config-no-caching" destination="#[vars.destination]"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.firstMessage]" is="#[MunitTools::equalTo(vars.message)]"/>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(vars.message)]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="publish-xa-message-and-rollback">
        <munit:execution>
            <set-variable variableName="destination" value="#[randomInt(1000000) as String]"/>
            <set-variable variableName="message" value="#[randomInt(1000000) as String]"/>
            <try>

                <try>
                    <try transactionalAction="ALWAYS_BEGIN" transactionType="XA">
                        <jms:publish config-ref="JMS_Config_XA" destination="#[vars.destination]">
                            <jms:message>
                                <jms:body>#[vars.message]</jms:body>
                            </jms:message>
                        </jms:publish>
                        <raise-error type="MULE:ANY" description="TX"/>
                    </try>
                    <error-handler>
                        <on-error-continue>
                            <jms:consume config-ref="config-no-caching" destination="#[vars.destination]"
                                         maximumWait="1000"/>
                            <raise-error type="ANY"/>
                        </on-error-continue>
                    </error-handler>
                </try>
                <error-handler>
                    <on-error-continue type="JMS:TIMEOUT">
                        <logger message="expected error. Means message was never published"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
    </munit:test>

    <munit:test name="consume-and-publish-2-configs">
        <munit:execution>
            <set-variable variableName="destination" value="#[randomInt(1000000) as String]"/>
            <set-variable variableName="destination2" value="#[randomInt(1000000) as String]"/>
            <set-variable variableName="message" value="#[randomInt(1000000) as String]"/>
            <flow-ref name="publishMessage"/>
            <try transactionalAction="ALWAYS_BEGIN" transactionType="XA">
                <jms:consume config-ref="JMS_Config_XA" destination="#[vars.destination]"/>
                <jms:publish config-ref="JMS_Config_XA_MAX_REDELIVERY" destination="#[vars.destination2]">
                    <jms:message>
                        <jms:body>#[vars.message]</jms:body>
                    </jms:message>
                </jms:publish>
            </try>
            <jms:consume config-ref="config-no-caching" destination="#[vars.destination2]"/>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(vars.message)]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="consume-and-publish-2-configs-rollback">
        <munit:execution>
            <set-variable variableName="destination" value="#[randomInt(1000000) as String]"/>
            <set-variable variableName="destination2" value="#[randomInt(1000000) as String]"/>
            <set-variable variableName="message" value="#[randomInt(1000000) as String]"/>
            <flow-ref name="publishMessage"/>
            <try>
                <try transactionalAction="ALWAYS_BEGIN" transactionType="XA">
                    <jms:consume config-ref="JMS_Config_XA" destination="#[vars.destination]"/>
                    <jms:publish config-ref="JMS_Config_XA_MAX_REDELIVERY" destination="#[vars.destination2]">
                        <jms:message>
                            <jms:body>#[vars.message]</jms:body>
                        </jms:message>
                    </jms:publish>
                    <raise-error type="ANY"/>
                </try>
                <error-handler>
                    <on-error-continue>
                        <logger message="rollback TX but continue flow execution"/>
                    </on-error-continue>
                </error-handler>
            </try>
            <try>
                <jms:consume config-ref="config-no-caching" destination="#[vars.destination2]" maximumWait="1000"/>
                <raise-error type="ANY"/>
                <error-handler>
                    <on-error-continue type="JMS:TIMEOUT">
                        <logger message="expected error. Means message was never published"/>
                    </on-error-continue>
                </error-handler>
            </try>
            <jms:consume config-ref="config-no-caching" destination="#[vars.destination]"/>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(vars.message)]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="consume-and-publish">
        <munit:execution>
            <set-variable variableName="destination" value="#[randomInt(1000000) as String]"/>
            <set-variable variableName="destination2" value="#[randomInt(1000000) as String]"/>
            <set-variable variableName="message" value="#[randomInt(1000000) as String]"/>
            <flow-ref name="publishMessage"/>
            <try transactionalAction="ALWAYS_BEGIN" transactionType="XA">
                <jms:consume config-ref="JMS_Config_XA" destination="#[vars.destination]"/>
                <jms:publish config-ref="JMS_Config_XA" destination="#[vars.destination2]">
                    <jms:message>
                        <jms:body>#[vars.message]</jms:body>
                    </jms:message>
                </jms:publish>
            </try>
            <jms:consume config-ref="config-no-caching" destination="#[vars.destination2]"/>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(vars.message)]"/>
        </munit:validation>
    </munit:test>

    <flow name="publishMessage">
        <jms:publish config-ref="config" destination="#[vars.destination]">
            <jms:message>
                <jms:body>#[vars.message]</jms:body>
            </jms:message>
        </jms:publish>
    </flow>

</mule>
