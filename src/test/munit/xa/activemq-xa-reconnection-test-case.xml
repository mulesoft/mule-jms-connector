<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:java="http://www.mulesoft.org/schema/mule/java"
      xmlns:mtf="http://www.mulesoft.org/schema/mule/mtf"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
      http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
      http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
      http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
      http://www.mulesoft.org/schema/mule/mtf http://www.mulesoft.org/schema/mule/mtf/current/mule-mtf.xsd">

    <!--  Is required a 4.1.5 min mule version to prevent a bug on the lazy init on Bitronix -->
    <munit:config name="activemq-xa-reconnection-test-case.xml" minMuleVersion="4.1.6"/>

    <munit:test name="connection-lost-and-recovered">
        <munit:behavior>
            <java:invoke-static class="org.mule.extensions.jms.test.util.BadProxy" method="generateConnectivityIssue(String, String)">
                <java:args>
                    #[{arg0: ${activemq.listener.port}, arg1: ${connection.lost.port}}]
                </java:args>
            </java:invoke-static>
        </munit:behavior>
        <munit:execution>
            <try transactionType="XA" transactionalAction="ALWAYS_BEGIN">
                <try>
                    <set-payload value="#[1]"/>
                    <flow-ref name="publish-each"/>
                    <error-handler>
                        <on-error-continue type="JMS:CONNECTIVITY"/>
                    </error-handler>
                </try>
                <java:invoke-static class="org.mule.extensions.jms.test.util.BadProxy" method="resolveConnectivityIssue()"/>
                <set-payload value="#[3]"/>
                <flow-ref name="publish-each"/>
            </try>
        </munit:execution>
        <munit:validation>
            <jms:consume config-ref="JMS_Config_XA" destination="destination_2"/>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(1)]"/>
            <jms:consume config-ref="JMS_Config_XA" destination="destination_2"/>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(3)]"/>
            <jms:consume config-ref="JMS_Config_XA_UNSTABLE_CONNECTION" destination="destination_1"/>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(4)]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="connection-lost-and-never-recover">
        <munit:behavior>
            <java:invoke-static class="org.mule.extensions.jms.test.util.BadProxy" method="generateConnectivityIssue(String, String)">
                <java:args>
                    #[{arg0: ${activemq.listener.port}, arg1: ${connection.broken.port}}]
                </java:args>
            </java:invoke-static>
        </munit:behavior>
        <munit:execution>
            <try>
                <try transactionType="XA" transactionalAction="ALWAYS_BEGIN">
                    <set-payload value="#[1]"/>
                    <flow-ref name="publish-on-memory"/>
                    <set-payload value="#[2]"/>
                    <until-successful maxRetries="1" millisBetweenRetries="1000">
                        <flow-ref name="publish-on-broken-broker"/>
                    </until-successful>
                </try>
                <error-handler>
                    <on-error-continue/>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <try>
                <jms:consume config-ref="JMS_Config_XA" destination="destination_2"/>
                <munit-tools:fail message="Operation should have been rolled back"/>
                <error-handler>
                    <on-error-continue type="JMS:TIMEOUT"/>
                </error-handler>
            </try>
        </munit:validation>
    </munit:test>

    <flow name="publish-on-memory">
        <jms:publish config-ref="JMS_Config_XA" destination="destination_2">
            <jms:message>
                <jms:body>#[payload]</jms:body>
            </jms:message>
        </jms:publish>
    </flow>

    <flow name="publish-on-other-broker">
        <jms:publish config-ref="JMS_Config_XA_UNSTABLE_CONNECTION" destination="destination_1">
            <jms:message>
                <jms:body>#[payload]</jms:body>
            </jms:message>
        </jms:publish>
    </flow>

    <flow name="publish-on-broken-broker">
        <jms:publish config-ref="JMS_Config_XA_BROKEN_CONNECTION" destination="destination_1">
            <jms:message>
                <jms:body>#[payload]</jms:body>
            </jms:message>
        </jms:publish>
    </flow>

    <flow name="publish-each">
        <set-payload value="#[payload]"/>
        <flow-ref name="publish-on-memory"/>
        <set-payload value="#[payload + 1]"/>
        <flow-ref name="publish-on-other-broker"/>
    </flow>
</mule>