<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns:connection-test="http://www.mulesoft.org/schema/mule/connection-test"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:mtf="http://www.mulesoft.org/schema/mule/mtf"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
      http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
      http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
      http://www.mulesoft.org/schema/mule/connection-test http://www.mulesoft.org/schema/mule/connection-test/current/mule-connection-test.xsd
      http://www.mulesoft.org/schema/mule/mtf http://www.mulesoft.org/schema/mule/mtf/current/mule-mtf.xsd">

    <!--  Is required a 4.1.5 min mule version to prevent a bug on the lazy init on Bitronix -->
    <munit:config name="activemq-xa-reconnection-test-case.xml" minMuleVersion="4.1.6"/>

    <munit:before-suite name="proxySetup">
        <connection-test:define-proxy-server-port serverPort="${toxiproxy.port}"/>
        <connection-test:create-proxy realPort="61616" realHost="activemq" proxyPort="${connection.lost.port}"/>
    </munit:before-suite>

    <munit:after-test name="afterTest-activemq-xa-reconnection-test-case" description="after test">
        <set-variable variableName="brokerName" value="localhost"/>
        <set-variable variableName="destinationName" value="destination_1"/>
        <flow-ref name="purgeQueue"/>
        <set-variable variableName="destinationName" value="destination_2"/>
        <flow-ref name="purgeQueue"/>
    </munit:after-test>

    <!-- Ignored until MULE-17221 is fixed -->
    <munit:test name="connection-lost-and-recovered-several-times" ignore="true">
        <munit:execution>
            <try transactionType="XA" transactionalAction="ALWAYS_BEGIN">
                <foreach collection="(1 to 3) as Array">
                    <flow-ref name="try-with-connectivity-error"/>
                </foreach>
            </try>
        </munit:execution>
        <munit:validation>
            <foreach collection="(1 to 3) as Array">
                <flow-ref name="validate-connectivity-error"/>
            </foreach>
        </munit:validation>
    </munit:test>

    <!--flacky JMSC-66-->
    <!--<munit:test name="connection-lost-and-eventually-recovered" ignore="#[Munit::muleVersionEqualTo('4.2.0')]">-->
    <munit:test name="connection-lost-and-eventually-recovered" ignore="true">
        <munit:execution>
            <connection-test:disconnect-proxy proxyPort="${connection.lost.port}"/>
            <async>
                <logger message="#[ import * from dw::Runtime --- '' wait 1000]"/>
                <connection-test:reconnect-proxy proxyPort="${connection.lost.port}"/>
            </async>
            <set-payload value="Al tok perro"/>
            <try transactionType="XA" transactionalAction="ALWAYS_BEGIN">
                <until-successful maxRetries="10" millisBetweenRetries="500">
                    <flow-ref name="publish-on-unstable-broker"/>
                </until-successful>
                <flow-ref name="publish-on-memory-broker"/>
            </try>
        </munit:execution>
        <munit:validation>
            <jms:consume config-ref="JMS_Config_XA" destination="destination_2"/>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('Al tok perro')]"/>
            <jms:consume config-ref="JMS_Config_XA_UNSTABLE_CONNECTION" destination="destination_1"/>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('Al tok perro')]"/>
        </munit:validation>
    </munit:test>

    <!--EE-7710. Should be ignore="#[Munit::muleVersionEqualTo('4.2.0')]"-->
    <munit:test name="connection-lost-and-never-recover" ignore="true" >
        <munit:behavior>
            <connection-test:disconnect-proxy proxyPort="${connection.lost.port}"/>
        </munit:behavior>
        <munit:execution>
            <try>
                <try transactionType="XA" transactionalAction="ALWAYS_BEGIN">
                    <set-payload value="#[1]"/>
                    <flow-ref name="publish-on-memory-broker"/>
                    <set-payload value="#[2]"/>
                    <until-successful maxRetries="3" millisBetweenRetries="1000">
                        <flow-ref name="publish-on-unstable-broker"/>
                    </until-successful>
                </try>
                <error-handler>
                    <on-error-continue/>
                </error-handler>
            </try>
            <connection-test:reconnect-proxy proxyPort="${connection.lost.port}"/>
        </munit:execution>
        <munit:validation>
            <try>
                <jms:consume config-ref="JMS_Config_XA" destination="destination_2"/>
                <munit-tools:fail message="Operation should have been rolled back"/>
                <error-handler>
                    <on-error-continue type="JMS:TIMEOUT"/>
                </error-handler>
            </try>
        </munit:validation>
    </munit:test>

    <flow name="publish-on-unstable-broker">
        <jms:publish config-ref="JMS_Config_XA_UNSTABLE_CONNECTION" destination="destination_1">
            <jms:message>
                <jms:body>#[payload]</jms:body>
            </jms:message>
        </jms:publish>
    </flow>

    <flow name="publish-each">
        <set-payload value="#[payload]"/>
        <flow-ref name="publish-on-memory-broker"/>
        <set-payload value="#[payload + 1]"/>
        <flow-ref name="publish-on-unstable-broker"/>
    </flow>

    <flow name="try-with-connectivity-error">
        <connection-test:disconnect-proxy proxyPort="${connection.lost.port}"/>
        <logger message="#[ import * from dw::Runtime --- '' wait 500]"/>
        <try>
            <set-payload value="#[1]"/>
            <flow-ref name="publish-each"/>
            <error-handler>
                <on-error-continue/>
            </error-handler>
        </try>
        <connection-test:reconnect-proxy proxyPort="${connection.lost.port}"/>
        <set-payload value="#[3]"/>
        <logger message="#[ import * from dw::Runtime --- '' wait 1000]"/>
        <flow-ref name="publish-each"/>
    </flow>

    <flow name="publish-on-memory-broker">
        <jms:publish config-ref="JMS_Config_XA" destination="destination_2">
            <jms:message>
                <jms:body>#[payload]</jms:body>
            </jms:message>
        </jms:publish>
    </flow>

    <flow name="validate-connectivity-error">
        <jms:consume config-ref="JMS_Config_XA" destination="destination_2"/>
        <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(1)]"/>
        <jms:consume config-ref="JMS_Config_XA" destination="destination_2"/>
        <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(3)]"/>
        <jms:consume config-ref="JMS_Config_XA_UNSTABLE_CONNECTION" destination="destination_1"/>
        <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(4)]"/>
    </flow>
</mule>