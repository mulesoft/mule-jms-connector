<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
                          http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
                          http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
                          http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd">

    <munit:config name="rollback-in-bridge-scenarios-stressing">
        <munit:parameterizations>
            <munit:parameterization name="local-transactions">
                <munit:parameters>
                    <munit:parameter propertyName="listenerToStart" value="bridgeWithRollbackAndLocalTransactions"/>
                    <munit:parameter propertyName="publisherConfig" value="config-no-caching"/>
                </munit:parameters>
            </munit:parameterization>
            <munit:parameterization name="XA-transactions">
                <munit:parameters>
                    <munit:parameter propertyName="listenerToStart" value="bridgeWithRollbackAndXATransactions"/>
                    <munit:parameter propertyName="publisherConfig" value="JMS_Config_XA"/>
                </munit:parameters>
            </munit:parameterization>
        </munit:parameterizations>
    </munit:config>

    <munit:after-test name="afterTest-rollback-in-bridge-scenarios-test-case" description="after test">
        <set-variable variableName="brokerName" value="localhost"/>
        <set-variable variableName="destinationName" value="DEV.QUEUE.1"/>
        <flow-ref name="purgeQueue"/>
        <set-variable variableName="destinationName" value="DEV.QUEUE.2"/>
        <flow-ref name="purgeQueue"/>
        <set-variable variableName="destinationName" value="DEV.QUEUE.3"/>
        <flow-ref name="purgeQueue"/>
    </munit:after-test>

    <munit:test name="rollbackAndSuccessfulMessagesAreDispatchedAccordingly">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="errorListener"/>
            <munit:enable-flow-source value="destinationQueueListener"/>
            <munit:enable-flow-source value="${listenerToStart}"/>
        </munit:enable-flow-sources>
        <munit:execution>
            <!-- Message counts settings -->
            <set-variable value="#[150]" variableName="numberOfErrorMessages"/>
            <set-variable value="#[200]" variableName="numberOfSuccessMessages"/>
            <!-- Publish rollback messages -->
            <foreach collection="#[1 to vars.numberOfErrorMessages]">
                <set-payload value="#['message number $(payload)']"/>
                <jms:publish config-ref="config-no-caching" destination="DEV.QUEUE.1">
                    <jms:message>
                        <jms:body>#['TX_FAIL']</jms:body>
                    </jms:message>
                </jms:publish>
            </foreach>
            <!-- Publish success messages -->
            <foreach collection="#[1 to vars.numberOfSuccessMessages]">
                <set-payload value="#['message number $(payload)']"/>
                <jms:publish config-ref="config-no-caching" destination="DEV.QUEUE.1">
                    <jms:message>
                        <jms:body>#['SUCCESS']</jms:body>
                    </jms:message>
                </jms:publish>
            </foreach>
        </munit:execution>
        <munit:validation>
            <try>
                <until-successful maxRetries="10" millisBetweenRetries="500">
                    <munit-tools:assert-that expression="#[MunitTools::queueSize('error')]" is="#[MunitTools::equalTo(vars.numberOfErrorMessages)]"/>
                    <munit-tools:assert-that expression="#[MunitTools::queueSize('success')]" is="#[MunitTools::equalTo(vars.numberOfSuccessMessages)]"/>
                </until-successful>
                <error-handler>
                    <on-error-propagate type="ANY">
                        <set-variable value="#[MunitTools::queueSize('error')]" variableName="errorMessagesReceived"/>
                        <set-variable value="#[MunitTools::queueSize('success')]" variableName="successMessagesReceived"/>
                        <munit-tools:fail message="#[
                            'Error queue should contain $(vars.numberOfErrorMessages) messages but has received $(vars.errorMessagesReceived). ' ++
                            'Success queue should contain $(vars.numberOfSuccessMessages) messages but has received $(vars.successMessagesReceived)']"/>
                    </on-error-propagate>
                </error-handler>
            </try>
        </munit:validation>
    </munit:test>

    <flow name="errorListener">
        <jms:listener config-ref="config-no-caching" destination="DEV.QUEUE.3" ackMode="AUTO"/>
        <munit-tools:queue queueName="error"/>
    </flow>

    <flow name="destinationQueueListener">
        <jms:listener config-ref="config-no-caching" destination="DEV.QUEUE.2" ackMode="AUTO" transactionalAction="ALWAYS_BEGIN"/>
        <munit-tools:queue queueName="success"/>
    </flow>

    <flow name="bridgeWithRollbackAndLocalTransactions">
        <jms:listener config-ref="config-no-caching" destination="DEV.QUEUE.1" ackMode="AUTO" transactionalAction="ALWAYS_BEGIN">
            <redelivery-policy maxRedeliveryCount="0" />
            <reconnect-forever frequency="3000"/>
            <jms:consumer-type >
                <jms:queue-consumer />
            </jms:consumer-type>
        </jms:listener>
        <jms:publish config-ref="${publisherConfig}" destination="DEV.QUEUE.2"/>
        <choice>
            <when expression='#[payload == "TX_FAIL"]'>
                <logger level="DEBUG" message="Making transaction fail"/>
                <raise-error type="ANY:ANY"/>
            </when>
        </choice>
        <error-handler >
            <on-error-continue enableNotifications="true" logException="false" type="MULE:REDELIVERY_EXHAUSTED">
                <logger level="DEBUG" message="Publishing to error queue"/>
                <jms:publish config-ref="${publisherConfig}" destination="DEV.QUEUE.3" />
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="bridgeWithRollbackAndXATransactions">
        <jms:listener config-ref="JMS_Config_XA" destination="DEV.QUEUE.1" ackMode="AUTO" transactionalAction="ALWAYS_BEGIN" transactionType="XA">
            <redelivery-policy maxRedeliveryCount="0" />
            <reconnect-forever frequency="3000"/>
            <jms:consumer-type >
                <jms:queue-consumer />
            </jms:consumer-type>
        </jms:listener>
        <jms:publish config-ref="${publisherConfig}" destination="DEV.QUEUE.2"/>
        <choice>
            <when expression='#[payload == "TX_FAIL"]'>
                <logger level="DEBUG" message="Making transaction fail"/>
                <raise-error type="ANY:ANY"/>
            </when>
        </choice>
        <error-handler >
            <on-error-continue enableNotifications="true" logException="false" type="MULE:REDELIVERY_EXHAUSTED">
                <logger level="DEBUG" message="Publishing to error queue"/>
                <jms:publish config-ref="${publisherConfig}" destination="DEV.QUEUE.3" />
            </on-error-continue>
        </error-handler>
    </flow>

</mule>
